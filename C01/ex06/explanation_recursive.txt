
___________________________________________________________________
---------------step 1- ft_recursive_strlen(char str) ; str[0]----------------

if(str[0] == '\0')
        return(0);
    else    
        return (ft_recursive_strlen(str + 1) + 1) -----> we do this and to be able able of doing this addition we need the return value of ft_recusvive_strlen(str + 1)

            |address | Value| [ ] |
----------------------------|-----|
char        |  0x40  |  'h' |  0  | --------> we are here
----------------------------|-----|
char        |  0x41  |  'e' |  1  | 
----------------------------|-----|
char        |  0x42  |  'l' |  2  |
----------------------------|-----|
char        |  0x43  |  'l' |  3  |
----------------------------|-----|
char        |  0x44  |  'o' |  4  |
----------------------------|-----|
char        |  0x45  |  '\0'|  5  |
----------------------------|-----|
char *str   |  0x03  | 0x40 |  6  |
----------------------------|-----|

___________________________________________________________________
---------------step 2- ft_recursive_strlen(char str + 1) ; str[0 + 1]----------------

if(str[1] == '\0')
        return(0);
    else    
        return (ft_recursive_strlen(str + 1) + 1) -----> we do this and to be able able of doing this addition we need the return value of ft_recusvive_strlen(str + 1)

            |address | Value| [ ] |
----------------------------|-----|
char        |  0x40  |  'h' |  0  | 
----------------------------|-----|
char        |  0x41  |  'e' |  1  | --------> we are here
----------------------------|-----|
char        |  0x42  |  'l' |  2  |
----------------------------|-----|
char        |  0x43  |  'l' |  3  |
----------------------------|-----|
char        |  0x44  |  'o' |  4  |
----------------------------|-----|
char        |  0x45  |  '\0'|  5  |
----------------------------|-----|
char *str   |  0x03  | 0x40 |  6  |
----------------------------|-----|

___________________________________________________________________
---------------step 3- ft_recursive_strlen(char str + 1) ; str[1 + 1]----------------

if(str[2] == '\0')
        return(0);
    else    
        return (ft_recursive_strlen(str + 1) + 1) -----> we do this and to be able able of doing this addition we need the return value of ft_recusvive_strlen(str + 1)

            |address | Value| [ ] |
----------------------------|-----|
char        |  0x40  |  'h' |  0  |
----------------------------|-----|
char        |  0x41  |  'e' |  1  | 
----------------------------|-----|
char        |  0x42  |  'l' |  2  | --------> we are here
----------------------------|-----|
char        |  0x43  |  'l' |  3  |
----------------------------|-----|
char        |  0x44  |  'o' |  4  |
----------------------------|-----|
char        |  0x45  |  '\0'|  5  |
----------------------------|-----|
char *str   |  0x03  | 0x40 |  6  |
----------------------------|-----|

___________________________________________________________________
---------------step 4- ft_recursive_strlen(char str + 1) ; str[2 + 1]----------------

if(str[3] == '\0')
        return(0);
    else    
        return (ft_recursive_strlen(str + 1) + 1) -----> we do this and to be able able of doing this addition we need the return value of ft_recusvive_strlen(str + 1)

            |address | Value| [ ] |
----------------------------|-----|
char        |  0x40  |  'h' |  0  | 
----------------------------|-----|
char        |  0x41  |  'e' |  1  | 
----------------------------|-----|
char        |  0x42  |  'l' |  2  |
----------------------------|-----|
char        |  0x43  |  'l' |  3  | --------> we are here
----------------------------|-----|
char        |  0x44  |  'o' |  4  |
----------------------------|-----|
char        |  0x45  |  '\0'|  5  |
----------------------------|-----|
char *str   |  0x03  | 0x40 |  6  |
----------------------------|-----|

___________________________________________________________________
---------------step 5- ft_recursive_strlen(char str) ; str[3 + 1]----------------

if(str[4] == '\0')
        return(0);
    else    
        return (ft_recursive_strlen(str + 1) + 1) -----> we do this and to be able able of doing this addition we need the return value of ft_recusvive_strlen(str + 1)

            |address | Value| [ ] |
----------------------------|-----|
char        |  0x40  |  'h' |  0  |
----------------------------|-----|
char        |  0x41  |  'e' |  1  | 
----------------------------|-----|
char        |  0x42  |  'l' |  2  |
----------------------------|-----|
char        |  0x43  |  'l' |  3  |
----------------------------|-----|
char        |  0x44  |  'o' |  4  | --------> we are here
----------------------------|-----|
char        |  0x45  |  '\0'|  5  |
----------------------------|-----|
char *str   |  0x03  | 0x40 |  6  |
----------------------------|-----|

___________________________________________________________________
---------------step 6- ft_recursive_strlen(char str + 1) ; str[4 + 1]----------------

if(str[5] == '\0')
        return(0); -----> we do this
    else    
        return (ft_recursive_strlen(str + 1) + 1)

            |address | Value| [ ] |
----------------------------|-----|
char        |  0x40  |  'h' |  0  |
----------------------------|-----|
char        |  0x41  |  'e' |  1  | 
----------------------------|-----|
char        |  0x42  |  'l' |  2  |
----------------------------|-----|
char        |  0x43  |  'l' |  3  |
----------------------------|-----|
char        |  0x44  |  'o' |  4  |
----------------------------|-----|
char        |  0x45  |  '\0'|  5  | --------> we are here
----------------------------|-----|
char *str   |  0x03  | 0x40 |  6  |
----------------------------|-----|

------------------------------------------------------------------------------------

!- Now we can calculate step by step the return value of "step 5 ---> step 4 ---> step 3 ---> step 2 ---> step 1" 

!- the return value of step 1 will be our final result

__________________________________________________________________________________
-----------------------------------------------------------------------------------
_________________1- the return value of ft_recursive_strlen(str[4])_______________________________________

    return = (ft_recursive_strlen(str[4] + 1) + 1)
           = (ft_recursive_strlen(str[5]) + 1) !- we add 1 to the return value of ft_recursive_strlen(str([5])
           = (0 + 1) 
           = (1)
__________________________________________________________________________
-----------------------------------------------------------------------------------
_________________1- the return value of step 5 ; ft_recursive_strlen(str[3])_______________________________________

    return = (ft_recursive_strlen(str[3] + 1) + 1)
           = (ft_recursive_strlen(str[4]) + 1) !- we add 1 to the return value of ft_recursive_strlen(str([4])
           = (1 + 1) 
           = (2)

__________________________________________________________________________
-----------------------------------------------------------------------------------
_________________1- the return value of ft_recursive_strlen(str[2])_______________________________________

    return = (ft_recursive_strlen(str[2] + 1) + 1)
           = (ft_recursive_strlen(str[3]) + 1) !- we add 1 to the return value of ft_recursive_strlen(str([3])
           = (2 + 1) 
           = (3)

__________________________________________________________________________
-----------------------------------------------------------------------------------
_________________1- the return value of ft_recursive_strlen(str[1])_______________________________________

    return = (ft_recursive_strlen(str[1] + 1) + 1)
           = (ft_recursive_strlen(str[2]) + 1) !- we add 1 to the return value of ft_recursive_strlen(str([2])
           = (3 + 1) 
           = (4)

__________________________________________________________________________
-----------------------------------------------------------------------------------
_________________1- the return value of ft_recursive_strlen(str[0])_______________________________________

    return = (ft_recursive_strlen(str[0] + 1) + 1)
           = (ft_recursive_strlen(str[1]) + 1) !- we add 1 to the return value of ft_recursive_strlen(str([1])
           = (4 + 1) 
           = (5)